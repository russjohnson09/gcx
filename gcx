#! /usr/bin/env node

const fs = require('fs')
const path = require('path')
const meow = require('meow')
const process = require('child_process').exec
const chokidar = require('chokidar')
const createLogger = require('progress-estimator')

const compile = (file) => {
  return new Promise((resolve, reject) => {
    process(
      `g++ ${file} -o ${file.replace('cpp', 'out')} -lcurses && ./${file.replace('cpp', 'out')}`
    , (err, stdout, stderr) => {
      if (err) {
        reject(stderr)
      } else {
        resolve(stdout)
      }
    })
  })
}

const CLI = meow(`
  Usage
    $ gcx <filename>
  
  Example
    $ gcx example.cpp
`)

if (CLI.input.length === 0) {
  CLI.showHelp()
}

else if (CLI.input.length > 1) {
  console.log('only can compile one file')
}

else {
  const filename = CLI.input[0]

  chokidar.watch(path.resolve(filename), {
    ignored: /(^|[\/\\])\../}
  ).on('all', (event, path) => {
    compile(filename)
      .then(res => {
        console.log(res)
      })
      .catch(res => {
        console.log('error', res)
      })
  })
}
